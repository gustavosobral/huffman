#ifndef __VECTORBITS_H_INCLUDED__
#define __VECTORBITS_H_INCLUDED__

/**
 * \file vectorbits.hpp
 * \authors Gustavo Sobral, Francielly Cardoso
 * \date May 2015
 */

#include <vector>			// std::vector
#include <string>			// std::string
#include <math.h>			// pow()
#include <sstream>		// std::stringstream
#include <stdlib.h>		// size_type
#include <iostream>		// std::ostream

/** \brief Hold the operations with bits.
 *
 * This class abstract all the operations with bits.
 */
class VectorBits {
private:
	std::vector<int> bits;

public:

	/** \brief The class constructor.
	 */
	VectorBits();

	/** \brief The class constructor.
	 * Constructor whos starts with the bits of the passed char.
	 *
	 * \param c Value converted to initialize the object.
	 */
	VectorBits(char c);

	/** \brief The class constructor.
	 *
	 * \param vector String with zeros and ones to fill the object.
	 */
	VectorBits(std::string vector);
	
	/** \brief The class destructor.
		*/
	~VectorBits(void);

	/** \brief Gets the bits of the object.
	 * \return An int vector with the bits.
	 */
	std::vector<int> getBits(void);

	/** \brief Gets the size of the vector.
	 * \return The vector size.
	 */
	int size(void);

	/** \brief Erase 8 bits.
	 */
	void erase(void);

	/** \brief Gets the bit at index.
	 * \param index The index of the bit to be returned.
	 * \return The bit at position index.
	 */
	int at(int index);

	/** \brief Complete the vector with zeros.
	 */
	void complete(void);

	/** \brief Gets the first bit of the vector.
	 * \return The first bit.
	 */
	int get_front(void);

	/** \brief Delete the first bit.
	 */
	void delete_front(void);

	/** \brief Generate the correspondent byte for the first 8 bit.
	 * \return The generated byte.
	 */
	int generate_byte(void);
	
	/** \brief Concatenate two VectorBits.
	 * \param vBits The VectorBits to be concatenated with.
	 */
	void push_back(VectorBits * vBits);

	/** \brief Assigns to the VectorBits the concatenation of vectors.
	 */
	const VectorBits & operator=(const VectorBits & v);

	/** \brief Prints all the bits on the object.
	 */
	friend std::ostream & operator<<(std::ostream & o, const VectorBits & v);
};

#endif